---
- hosts: sidecar
  vars_files:
    - vars/sidecar.yml
  tasks:
    - name: all things for root
      become: true
      block:
        - name: set hostname
          hostname: name={{ sidecar_hostname }}

        - name: set etc/host for hostname
          lineinfile: dest=/etc/hosts line="127.0.0.1 {{ sidecar_hostname }}"

        - name: ensure apt-cache
          copy: content='Acquire::http::proxy::us.archive.ubuntu.com "http://192.168.1.2:8000/ubuntu";' dest=/etc/apt/apt.conf

        - name: install sources.list
          copy: src=files/xenial-sources.list dest=/etc/apt/sources.list

        - name: copy google packages gpg key
          copy: src=packages.google.com.apt-key.gpg dest=/var/tmp/packages.google.com.apt-key.gpg

        - name: install google packages gpg key
          apt_key: state=present file=/var/tmp/packages.google.com.apt-key.gpg

        - name: install kubeadm apt sources
          apt_repository: repo="deb http://packages.cloud.google.com/apt kubernetes-xenial main" state=present

        - name: install current docker GPG key
          apt_key: state=present url=https://download.docker.com/linux/ubuntu/gpg id=0EBFCD88

        - name: ensure the docker apt repository is added
          apt_repository: state=absent repo='deb https://download.docker.com/linux/ubuntu xenial stable'

        - name: ensure the docker apt repository is added
          apt_repository: state=present repo='deb http://download.docker.com/linux/ubuntu xenial stable'

        - name: update and safe upgrade apt-get packages
          apt: update_cache=true cache_valid_time=60 upgrade=safe

        - name: reset kubeadm
          shell: (which kubeadm && kubeadm reset) || true

        - shell: apt-get remove -y docker-ce docker.io runc

        - name: install main system packages
          apt: pkg={{ item }} state=present
          with_items:
            - unattended-upgrades
            - apt-transport-https
            - build-essential
            - git
            - screen
            - vim
            - psmisc
            - curl
            - zip
            - rsync
            - wget
            - htop
            - tree
            - mailutils
            - console-setup
            - kbd
            - xkb-data
            - man-db
            - libc-bin
            - dnsutils
            - pv
            - libssl1.0.0
            - openssl
            - libssl-dev
            - update-manager-core
            - update-notifier-common
            - libpcap0.8
            - tcpdump
            - aptitude
            - python-setuptools
            - libc6-dev
            - g++
            - zlib1g-dev
            - python-pkg-resources
            - iftop
            - nethogs
            - gcc
            - make
            - autoconf
            - autogen
            - automake
            - pkg-config
            - libcgmanager-dev
            - libcgmanager0
            - libcgroup-dev
            - libcgroup1
            - libpam-cgfs
            - nodejs
            - npm
            - ca-certificates
            - aufs-tools
            - kubelet
            - kubeadm
            - kubectl
            - kubernetes-cni
            - ruby
            - ruby-dev
            - ruby-bundler
            - openvpn
            - conntrack
            - docker-ce=17.03.2~ce-0~ubuntu-xenial

        - name: add {{ ansible_ssh_user }} to docker group, to build docker images for
          user: name={{ ansible_ssh_user }} append=true groups=docker

        - name: reset kubeadm
          shell: kubeadm reset

        - name: copy openvpn config
          copy: src={{ sidecar_hostname }}.ovpn dest=/etc/openvpn/client.conf

        - name: restart openvpn client
          service: name=openvpn@client state=restarted
