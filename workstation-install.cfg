# which chipset?
platform=AMD64

# Install OS instead of: upgrade
install

# Predetermine several required settings for wifi, misc.
preseed passwd/root-login boolean false
preseed partman-efi/non_efi_system boolean true
preseed netcfg/choose_interface select wlan0
preseed netcfg/wireless_show_essids select manual
preseed netcfg/wireless_security_type select wpa
preseed netcfg/wireless_essid string SSID_NAME
preseed netcfg/wireless_essid_again string SSID_NAME
preseed netcfg/wireless_wpa string SSID_PASS

#TODO: figure out final mirror settings
preseed mirror/http/proxy string http://192.168.1.2:8000/ubuntu
#url --url http://archive.ubuntu.com/ubuntu
#url --url http://192.168.1.2:8000/ubuntu

# System language
lang en_US

# Language modules to install
langsupport --default en_US.UTF-8 en_US.UTF-8

# Root password should not be allowed
rootpw --disabled

# Initial user
user mavenlink --fullname "engineer" --password password123

# Reboot after installation
reboot

# Use text mode install
text

# System authorization infomation
auth  --useshadow  --enablemd5

# Network information
network --bootproto=dhcp --device=wlan0 --hostname=sidecar

# Do not configure the X Window System
skipx

# Install bare min required
%packages --resolvedeps
openssh-server
git-core
gdisk
dosfstools
tree
sharutils
vim
ruby2.3

# NOTE: this installs kangaroopc wifi modules, #TODO: remove when merged upstream
%pre
depmod 2>&1 >> /root/pre-install.kickstart
modprobe iwlmvm 2>&1 >> /root/pre-install.kickstart
lsmod 2>&1 >> /root/pre-install.kickstart
echo "Pre Install ! v2.5" >> /root/pre-install.kickstart

%post 
echo "Post Install ! v2.5" >> /root/post-install.kickstart

cd /

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.15.2).
# To extract the files from this archive, save it to some FILE, remove
# everything before the '#!/bin/sh' line above, then type 'sh FILE'.
#
lock_dir=_sh02182
# Made on 2017-05-02 02:04 PDT by <mavenlink@sidecar>.
# Source directory was '/home/mavenlink/workspace/sidecar/rootfs-overlay'.
#
# Existing files will *not* be overwritten, unless '-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#     84 -rwxr-xr-x etc/network/interfaces.d/wlan0
#    126 -rwxr-xr-x etc/wpa_supplicant/wpa_supplicant.conf
#   1256 -rwxr-xr-x etc/default/grub
#
MD5SUM=${MD5SUM-md5sum}
f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
test -n "${f}" && md5check=true || md5check=false
${md5check} || \
  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
if test "X$1" = "X-c"
then keep_file=''
else keep_file=true
fi
echo=echo
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=
locale_dir=
set_echo=false

for dir in $PATH
do
  if test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    case `$dir/gettext --version 2>&1 | sed 1q` in
      *GNU*) gettext_dir=$dir
      set_echo=true
      break ;;
    esac
  fi
done

if ${set_echo}
then
  set_echo=false
  for dir in $PATH
  do
    if test -f $dir/shar \
       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
    then
      locale_dir=`$dir/shar --print-text-domain-dir`
      set_echo=true
      break
    fi
  done

  if ${set_echo}
  then
    TEXTDOMAINDIR=$locale_dir
    export TEXTDOMAINDIR
    TEXTDOMAIN=sharutils
    export TEXTDOMAIN
    echo="$gettext_dir/gettext -s"
  fi
fi
IFS="$save_IFS"
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
then if (echo -n test; echo 1,2,3) | grep n >/dev/null
     then shar_n= shar_c='
'
     else shar_n=-n shar_c= ; fi
else shar_n= shar_c='\c' ; fi
f=shar-touch.$$
st1=200112312359.59
st2=123123592001.59
st2tr=123123592001.5 # old SysV 14-char limit
st3=1231235901

if   touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
     test ! -f ${st1} && test -f ${f}; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'

elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
     test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'

elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
     test ! -f ${st3} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'

else
  shar_touch=:
  echo
  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
installing GNU '\''touch'\'', distributed in GNU coreutils...'
  echo
fi
rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
#
if test ! -d ${lock_dir} ; then :
else ${echo} "lock directory ${lock_dir} exists"
     exit 1
fi
if mkdir ${lock_dir}
then ${echo} "x - created lock directory ${lock_dir}."
else ${echo} "x - failed to create lock directory ${lock_dir}."
     exit 1
fi
# ============= etc/network/interfaces.d/wlan0 ==============
if test ! -d 'etc'; then
  mkdir 'etc'
if test $? -eq 0
then ${echo} "x - created directory etc."
else ${echo} "x - failed to create directory etc."
     exit 1
fi
fi
if test ! -d 'etc/network'; then
  mkdir 'etc/network'
if test $? -eq 0
then ${echo} "x - created directory etc/network."
else ${echo} "x - failed to create directory etc/network."
     exit 1
fi
fi
if test ! -d 'etc/network/interfaces.d'; then
  mkdir 'etc/network/interfaces.d'
if test $? -eq 0
then ${echo} "x - created directory etc/network/interfaces.d."
else ${echo} "x - failed to create directory etc/network/interfaces.d."
     exit 1
fi
fi
if test -n "${keep_file}" && test -f 'etc/network/interfaces.d/wlan0'
then
${echo} "x - SKIPPING etc/network/interfaces.d/wlan0 (file already exists)"

else
${echo} "x - extracting etc/network/interfaces.d/wlan0 (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'etc/network/interfaces.d/wlan0' &&
auto wlan0
iface wlan0 inet dhcp
X  wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
SHAR_EOF
  (set 20 17 05 02 01 32 18 'etc/network/interfaces.d/wlan0'
   eval "${shar_touch}") && \
  chmod 0755 'etc/network/interfaces.d/wlan0'
if test $? -ne 0
then ${echo} "restore of etc/network/interfaces.d/wlan0 failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'etc/network/interfaces.d/wlan0': 'MD5 check failed'
       ) << \SHAR_EOF
b29e483be1d1a2dab919fe392cef2f90  etc/network/interfaces.d/wlan0
SHAR_EOF

else
test `LC_ALL=C wc -c < 'etc/network/interfaces.d/wlan0'` -ne 84 && \
  ${echo} "restoration warning:  size of 'etc/network/interfaces.d/wlan0' is not 84"
  fi
fi
# ============= etc/wpa_supplicant/wpa_supplicant.conf ==============
if test ! -d 'etc/wpa_supplicant'; then
  mkdir 'etc/wpa_supplicant'
if test $? -eq 0
then ${echo} "x - created directory etc/wpa_supplicant."
else ${echo} "x - failed to create directory etc/wpa_supplicant."
     exit 1
fi
fi
if test -n "${keep_file}" && test -f 'etc/wpa_supplicant/wpa_supplicant.conf'
then
${echo} "x - SKIPPING etc/wpa_supplicant/wpa_supplicant.conf (file already exists)"

else
${echo} "x - extracting etc/wpa_supplicant/wpa_supplicant.conf (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'etc/wpa_supplicant/wpa_supplicant.conf' &&
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
X
network={
X  ssid=""
X  psk=""
}
SHAR_EOF
  (set 20 17 05 02 01 54 43 'etc/wpa_supplicant/wpa_supplicant.conf'
   eval "${shar_touch}") && \
  chmod 0755 'etc/wpa_supplicant/wpa_supplicant.conf'
if test $? -ne 0
then ${echo} "restore of etc/wpa_supplicant/wpa_supplicant.conf failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'etc/wpa_supplicant/wpa_supplicant.conf': 'MD5 check failed'
       ) << \SHAR_EOF
d189c6c8b7bce9b08bf589eac58e2b86  etc/wpa_supplicant/wpa_supplicant.conf
SHAR_EOF

else
test `LC_ALL=C wc -c < 'etc/wpa_supplicant/wpa_supplicant.conf'` -ne 126 && \
  ${echo} "restoration warning:  size of 'etc/wpa_supplicant/wpa_supplicant.conf' is not 126"
  fi
fi
# ============= etc/default/grub ==============
if test ! -d 'etc/default'; then
  mkdir 'etc/default'
if test $? -eq 0
then ${echo} "x - created directory etc/default."
else ${echo} "x - failed to create directory etc/default."
     exit 1
fi
fi
if test -n "${keep_file}" && test -f 'etc/default/grub'
then
${echo} "x - SKIPPING etc/default/grub (file already exists)"

else
${echo} "x - extracting etc/default/grub (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'etc/default/grub' &&
# If you change this file, run 'update-grub' afterwards to update
# /boot/grub/grub.cfg.
# For full documentation of the options in this file, see:
#   info -f grub -n 'Simple configuration'
X
GRUB_DEFAULT=0
GRUB_HIDDEN_TIMEOUT=0
GRUB_HIDDEN_TIMEOUT_QUIET=true
GRUB_TIMEOUT=0
GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`
GRUB_CMDLINE_LINUX_DEFAULT="quiet"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0"
X
# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
#GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"
X
# Uncomment to disable graphical terminal (grub-pc only)
#GRUB_TERMINAL=console
X
# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command `vbeinfo'
#GRUB_GFXMODE=640x480
X
# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
#GRUB_DISABLE_LINUX_UUID=true
X
# Uncomment to disable generation of recovery mode menu entries
#GRUB_DISABLE_RECOVERY="true"
X
# Uncomment to get a beep at grub start
#GRUB_INIT_TUNE="480 440 1"
SHAR_EOF
  (set 20 17 05 02 02 02 57 'etc/default/grub'
   eval "${shar_touch}") && \
  chmod 0755 'etc/default/grub'
if test $? -ne 0
then ${echo} "restore of etc/default/grub failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'etc/default/grub': 'MD5 check failed'
       ) << \SHAR_EOF
ab39e6dcd8582ec8df9fcaef84814475  etc/default/grub
SHAR_EOF

else
test `LC_ALL=C wc -c < 'etc/default/grub'` -ne 1256 && \
  ${echo} "restoration warning:  size of 'etc/default/grub' is not 1256"
  fi
fi
if rm -fr ${lock_dir}
then ${echo} "x - removed lock directory ${lock_dir}."
else ${echo} "x - failed to remove lock directory ${lock_dir}."
     exit 1
fi

####

chattr +i /etc/default/grub

update-grub
